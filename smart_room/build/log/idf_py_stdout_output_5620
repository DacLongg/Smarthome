[1/17] Performing build step for 'bootloader'
[1/1] cmd.exe /C "cd /D D:\App\ESP32\smart_room\build\bootloader\esp-idf\esptool_py && D:\App\ESP32\Espressif\python_env\idf5.2_py3.11_env\Scripts\python.exe D:/App/ESP32/Espressif/frameworks/esp-idf-v5.2.1/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 D:/App/ESP32/smart_room/build/bootloader/bootloader.bin"
Bootloader binary size 0x6860 bytes. 0x7a0 bytes (7%) free.
[2/15] Building C object esp-idf/wifi/CMakeFiles/__idf_wifi.dir/wifi.c.obj
[3/15] Building C object esp-idf/App/CMakeFiles/__idf_App.dir/mainApp.c.obj
[4/15] Building C object esp-idf/App/CMakeFiles/__idf_App.dir/sesion_communication.c.obj
[5/15] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/main.c.obj
[6/15] Linking C static library esp-idf\wifi\libwifi.a
[7/15] Linking C static library esp-idf\App\libApp.a
[8/15] Building C object esp-idf/user_mqtt/CMakeFiles/__idf_user_mqtt.dir/user_mqtt.c.obj
[9/15] Linking C static library esp-idf\user_mqtt\libuser_mqtt.a
[10/15] Linking C static library esp-idf\main\libmain.a
[11/15] Generating ld/sections.ld
[12/15] Linking CXX executable smart_room.elf
[13/15] Generating binary image from built executable
esptool.py v4.7.0
Creating esp32 image...
Merged 2 ELF sections
Successfully created esp32 image.
Generated D:/App/ESP32/smart_room/build/smart_room.bin
[14/15] cmd.exe /C "cd /D D:\App\ESP32\smart_room\build\esp-idf\esptool_py && D:\App\ESP32\Espressif\python_env\idf5.2_py3.11_env\Scripts\python.exe D:/App/ESP32/Espressif/frameworks/esp-idf-v5.2.1/components/partition_table/check_sizes.py --offset 0x8000 partition --type app D:/App/ESP32/smart_room/build/partition_table/partition-table.bin D:/App/ESP32/smart_room/build/smart_room.bin"
smart_room.bin binary size 0xe58a0 bytes. Smallest app partition is 0x100000 bytes. 0x1a760 bytes (10%) free.
[14/15] cmd.exe /C "cd /D D:\App\ESP32\Espressif\frameworks\esp-idf-v5.2.1\components\esptool_py && D:\App\ESP32\Espressif\tools\cmake\3.24.0\bin\cmake.exe -D IDF_PATH=D:/Appesptool.py --chip esp32 -p COM5 -b 460800 --before=default_reset --after=hard_reset write_flash --flash_mode dio --flash_freq 40m --flash_size 2MB 0x1000 bootloader/bootloader.bin 0x10000 smart_room.bin 0x8000 partition_table/partition-table.bin
esptool.py v4.7.0
Serial port COM5
Connecting......
Chip is ESP32-D0WD-V3 (revision v3.1)
Features: WiFi, BT, Dual Core, 240MHz, VRef calibration in efuse, Coding Scheme None
Crystal is 40MHz
MAC: a0:dd:6c:86:05:18
Uploading stub...
Running stub...
Stub running...
Changing baud rate to 460800
Changed.
Configuring flash size...
Flash will be erased from 0x00001000 to 0x00007fff...
Flash will be erased from 0x00010000 to 0x000f5fff...
Flash will be erased from 0x00008000 to 0x00008fff...
Compressed 26720 bytes to 16366...
Writing at 0x00001000... (100 %)
Wrote 26720 bytes (16366 compressed) at 0x00001000 in 0.6 seconds (effective 385.4 kbit/s)...
Hash of data verified.
Compressed 940192 bytes to 584359...
Writing at 0x00010000... (2 %)
Writing at 0x0001e2fc... (5 %)
Writing at 0x00028128... (8 %)
Writing at 0x0002cf88... (11 %)
Writing at 0x00034d0e... (13 %)
Writing at 0x000403d8... (16 %)
Writing at 0x00045f25... (19 %)
Writing at 0x0004b9e5... (22 %)
Writing at 0x00051bfd... (25 %)
Writing at 0x00057c54... (27 %)
Writing at 0x0005d84d... (30 %)
Writing at 0x0006359e... (33 %)
Writing at 0x00069dc4... (36 %)
Writing at 0x0006fa46... (38 %)
Writing at 0x00075611... (41 %)
Writing at 0x0007acf9... (44 %)
Writing at 0x00080008... (47 %)
Writing at 0x0008558b... (50 %)
Writing at 0x0008a7af... (52 %)
Writing at 0x0008fefb... (55 %)
Writing at 0x000955e5... (58 %)
Writing at 0x0009b36d... (61 %)
Writing at 0x000a0e46... (63 %)
Writing at 0x000a680e... (66 %)
Writing at 0x000ac42c... (69 %)
Writing at 0x000b21f4... (72 %)
Writing at 0x000b79a7... (75 %)
Writing at 0x000bd69d... (77 %)
Writing at 0x000c3116... (80 %)
Writing at 0x000c8bbb... (83 %)
Writing at 0x000d2b73... (86 %)
Writing at 0x000da945... (88 %)
Writing at 0x000e0758... (91 %)
Writing at 0x000e612e... (94 %)
Writing at 0x000ec48f... (97 %)
Writing at 0x000f1c8a... (100 %)
Wrote 940192 bytes (584359 compressed) at 0x00010000 in 13.4 seconds (effective 559.4 kbit/s)...
Hash of data verified.
Compressed 3072 bytes to 103...
Writing at 0x00008000... (100 %)
Wrote 3072 bytes (103 compressed) at 0x00008000 in 0.0 seconds (effective 1024.3 kbit/s)...
Hash of data verified.

Leaving...
Hard resetting via RTS pin...
/ESP32/Espressif/frameworks/esp-idf-v5.2.1 -D SERIAL_TOOL=D:/App/ESP32/Espressif/python_env/idf5.2_py3.11_env/Scripts/python.exe;;D:/App/ESP32/Espressif/frameworks/esp-idf-v5.2.1/components/esptool_py/esptool/esptool.py;--chip;esp32 -D SERIAL_TOOL_ARGS=--before=default_reset;--after=hard_reset;write_flash;@flash_args -D WORKING_DIRECTORY=D:/App/ESP32/smart_room/build -P D:/App/ESP32/Espressif/frameworks/esp-idf-v5.2.1/components/esptool_py/run_serial_tool.cmake"
